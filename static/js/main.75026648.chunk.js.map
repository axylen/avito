{"version":3,"sources":["Components/Header/Header.jsx","Components/SellerInfo/SellerInfo.jsx","Components/Product/Product.jsx","Containers/ProductList/ProductList.jsx","Containers/ProductsDataProvider/ProductsDataProvider.jsx","Components/Filters/Filters.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","_ref","setFavoritesOnly","favoritesClasses","favoritesOnly","push","setShowFavorites","show","document","activeElement","blur","react_default","a","createElement","className","onClick","xmlns","href","width","height","join","ratingColors","1","2","3","4","5","SellerInfo","data","_data$rating","rating","_data$name","name","isCompany","borderColor","Math","round","style","title","concat","toFixed","formatPrice","price","toLocaleString","currency","minimumFractionDigits","Product","_useContext","useContext","favoritesContext","favorites","addToFavorites","removeFromFavorites","id","seller","pictures","picturesCount","length","isInFavorites","includes","heartClassNames","src","alt","SellerInfo_SellerInfo","ProductList","products","map","product","key","Product_Product","React","createContext","getProducts","Object","asyncToGenerator","regenerator_default","mark","_callee","_ref2","_ref3","productsRes","sellersRes","sellers","wrap","_context","prev","next","Promise","all","fetch","then","res","json","sent","slicedToArray","forEach","abrupt","sellerId","relationships","objectSpread","stop","apply","this","arguments","getFavorites","localStorage","getItem","JSON","parse","filterProducts","filter","_ref4","category","minPrice","maxPrice","_ref5","_ref6","sortProducts","orderBy","sort","b","undefined","ProductsDataProvider","_ref7","_useState","useState","_useState2","productList","setProductList","_useState3","_useState4","productListFavorites","setProductListFavorites","useEffect","updateFav","e","window","addEventListener","removeEventListener","setFavorites","setItem","stringify","favoritesContextValue","toConsumableArray","productId","Provider","value","ProductList_ProductList","order","fixPriceValues","Filters","setFilter","localFilter","setLocalFilter","passFilter","preventDefault","handleChange","_e$target","target","type","parseInt","isNaN","newFilter","defineProperty","handleKeyPress","onSubmit","onChange","placeholder","onBlur","onKeyPress","min","App","Fragment","Header_Header","Filters_Filters","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.75026648.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default function Header({ setFavoritesOnly, favoritesOnly }) {\r\n  const favoritesClasses = ['header__heart-icon'];\r\n  if (favoritesOnly) favoritesClasses.push('header__heart-icon--active');\r\n\r\n  const setShowFavorites = show => {\r\n    document.activeElement.blur();\r\n    setFavoritesOnly(show);\r\n  };\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__container\">\r\n        <button className=\"header__avito-btn\" onClick={() => setShowFavorites(false)}>\r\n          <svg className=\"header__avito-icon\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <use href=\"icons.svg#icon-avito\" />\r\n          </svg>\r\n        </button>\r\n        <button className=\"header__favorites\" onClick={() => setShowFavorites(true)}>\r\n          <svg\r\n            width=\"21\"\r\n            height=\"20\"\r\n            className={favoritesClasses.join(' ')}\r\n            xmlns=\"http://www.w3.org/2000/svg\">\r\n            <use href=\"icons.svg#icon-heart\" />\r\n          </svg>\r\n          Избранное\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './SellerInfo.css';\r\n\r\nconst ratingColors = {\r\n  1: '#E74C3C',\r\n  2: '#EC8825',\r\n  3: '#F1C40F',\r\n  4: '#ADC630',\r\n  5: '#69CA53',\r\n};\r\n\r\nexport default function SellerInfo({ data }) {\r\n  const { rating = 0, name = '', isCompany } = data;\r\n  const borderColor = ratingColors[Math.round(rating)] || '#ccc';\r\n\r\n  return (\r\n    <div className=\"seller\">\r\n      <p className=\"seller__rating\" style={{ borderColor }} title={`Рейтинг продавца: ${rating}`}>\r\n        {rating.toFixed(1)}\r\n      </p>\r\n      <div className=\"seller-info\">\r\n        <p className=\"seller-info__company\">{isCompany ? 'Компания' : 'Частное лицо'}</p>\r\n        <p className=\"seller-info__name\">{name}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport './Product.css';\r\nimport SellerInfo from 'Components/SellerInfo/SellerInfo';\r\nimport { favoritesContext } from 'Containers/ProductsDataProvider/ProductsDataProvider';\r\n\r\nconst formatPrice = price => {\r\n  const options = {\r\n    style: 'currency',\r\n    currency: 'RUB',\r\n    minimumFractionDigits: 0,\r\n  };\r\n\r\n  return price.toLocaleString('ru', options);\r\n};\r\n\r\nexport default function Product({ data }) {\r\n  const { favorites, addToFavorites, removeFromFavorites } = useContext(favoritesContext);\r\n  const { id, title, seller, pictures } = data;\r\n\r\n  const picturesCount = pictures.length - 1;\r\n  const price = data.price ? formatPrice(data.price) : 'Цена не указана';\r\n  const isInFavorites = favorites.includes(id);\r\n\r\n  const handleClick = () => {\r\n    if (isInFavorites) {\r\n      return removeFromFavorites(id);\r\n    }\r\n    addToFavorites(id);\r\n  };\r\n\r\n  const heartClassNames = ['product__heart-icon'];\r\n  if (isInFavorites) heartClassNames.push('product__heart-icon--active');\r\n\r\n  return (\r\n    <div className=\"product\">\r\n      <div className=\"product__image-group\">\r\n        <img src={pictures[0]} alt={title} className=\"product__image\" />\r\n        <button className=\"product__favorites-btn\" onClick={handleClick}>\r\n          <svg width=\"20\" height=\"20\" className={heartClassNames.join(' ')}>\r\n            <use href=\"icons.svg#icon-heart\" />\r\n          </svg>\r\n        </button>\r\n        <div className=\"product__images-count\" title={`Дополнительных фото: ${picturesCount}`}>\r\n          {picturesCount === 0 ? null : `+${picturesCount}`}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"product__info\">\r\n        <h2 className=\"product__title\">{title}</h2>\r\n        <p className=\"product__price\">{price}</p>\r\n        <SellerInfo data={seller} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './ProductList.css';\r\n\r\nimport Product from 'Components/Product/Product';\r\n\r\nexport default function ProductList({ products }) {\r\n  if (products.length === 0) return 'Список объявлений пуст';\r\n\r\n  return (\r\n    <ul className=\"product-list\">\r\n      {products.map(product => (\r\n        <li key={product.id}>\r\n          <Product data={product} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport ProductList from 'Containers/ProductList/ProductList';\r\n\r\nconst favoritesContext = React.createContext();\r\n\r\nconst getProducts = async () => {\r\n  const [productsRes, sellersRes] = await Promise.all([\r\n    fetch('//avito.dump.academy/products').then(res => res.json()),\r\n    fetch('//avito.dump.academy/sellers').then(res => res.json()),\r\n  ]);\r\n\r\n  const sellers = {};\r\n  sellersRes.data.forEach(seller => {\r\n    sellers[seller.id] = seller;\r\n  });\r\n\r\n  return productsRes.data.map(product => {\r\n    const sellerId = product.relationships.seller;\r\n    return { ...product, seller: sellers[sellerId] };\r\n  });\r\n};\r\n\r\nconst getFavorites = () => {\r\n  const favorites = localStorage.getItem('favorites');\r\n  if (!favorites) return [];\r\n  return JSON.parse(favorites);\r\n};\r\n\r\nconst filterProducts = (products, filter, favorites, favoritesOnly) => {\r\n  if (favoritesOnly) {\r\n    products = products.filter(({ id }) => favorites.includes(id));\r\n  }\r\n\r\n  const { category, minPrice, maxPrice } = filter;\r\n  if (category !== 'any') {\r\n    products = products.filter(product => product.category === category);\r\n  }\r\n\r\n  if (minPrice !== '') {\r\n    products = products.filter(({ price }) => price >= minPrice);\r\n  }\r\n  if (maxPrice !== '') {\r\n    products = products.filter(({ price }) => price <= maxPrice);\r\n  }\r\n\r\n  return products;\r\n};\r\n\r\nconst sortProducts = (products, orderBy) => {\r\n  if (orderBy === 'rating') {\r\n    return products.sort((a, b) => b.seller.rating - a.seller.rating);\r\n  }\r\n  if (orderBy === 'price') {\r\n    return products.sort((a, b) => {\r\n      if (a.price === undefined) return 1;\r\n      if (b.price === undefined) return -1;\r\n      return a.price - b.price;\r\n    });\r\n  }\r\n};\r\n\r\nexport default function ProductsDataProvider({ filter, favoritesOnly }) {\r\n  const [productList, setProductList] = useState([]);\r\n  const [productListFavorites, setProductListFavorites] = useState(getFavorites());\r\n\r\n  // Загрузка избранных объявлений\r\n  useEffect(() => {\r\n    const updateFav = e => {\r\n      if (e.key === 'favorites') {\r\n        setProductListFavorites(getFavorites());\r\n      }\r\n    };\r\n\r\n    window.addEventListener('storage', updateFav);\r\n    return () => window.removeEventListener('storage', updateFav);\r\n  }, []);\r\n\r\n  // Загрузка списка объявлений\r\n  useEffect(() => {\r\n    getProducts().then(setProductList);\r\n  }, []);\r\n\r\n  const products = filterProducts(productList, filter, productListFavorites, favoritesOnly);\r\n\r\n  const setFavorites = favorites => {\r\n    setProductListFavorites(favorites);\r\n    localStorage.setItem('favorites', JSON.stringify(favorites));\r\n  };\r\n  const addToFavorites = id => {\r\n    if (productListFavorites.includes(id)) return;\r\n    setFavorites([...productListFavorites, id]);\r\n  };\r\n  const removeFromFavorites = id => {\r\n    setFavorites(productListFavorites.filter(productId => productId !== id));\r\n  };\r\n\r\n  const favoritesContextValue = {\r\n    favorites: productListFavorites,\r\n    addToFavorites,\r\n    removeFromFavorites,\r\n  };\r\n  return (\r\n    <favoritesContext.Provider value={favoritesContextValue}>\r\n      <ProductList products={sortProducts(products, filter.order)} />\r\n    </favoritesContext.Provider>\r\n  );\r\n}\r\n\r\nexport { favoritesContext };\r\n","import React, { useState } from 'react';\r\nimport './Filters.css';\r\n\r\nconst fixPriceValues = filter => {\r\n  if (filter.minPrice === '' || filter.maxPrice === '') {\r\n    return filter;\r\n  }\r\n\r\n  if (filter.minPrice > filter.maxPrice) {\r\n    filter = { ...filter, minPrice: filter.maxPrice, maxPrice: filter.minPrice };\r\n    return filter;\r\n  }\r\n\r\n  return filter;\r\n};\r\n\r\nexport default function Filters({ filter, setFilter }) {\r\n  const [localFilter, setLocalFilter] = useState(filter);\r\n\r\n  const passFilter = e => {\r\n    e.preventDefault();\r\n    const filter = fixPriceValues(localFilter);\r\n    setLocalFilter(filter);\r\n    setFilter(filter);\r\n  };\r\n\r\n  const handleChange = e => {\r\n    let { name, value, type } = e.target;\r\n\r\n    if (type === 'number') {\r\n      value = parseInt(value);\r\n      if (isNaN(value) || value <= 0) value = '';\r\n    }\r\n\r\n    const newFilter = { ...localFilter, [name]: value };\r\n\r\n    setLocalFilter(newFilter);\r\n    if (type === 'select-one') {\r\n      setFilter(newFilter);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = e => {\r\n    const key = e.key;\r\n\r\n    if (key === 'Enter') e.target.blur();\r\n    else if (isNaN(key)) e.preventDefault();\r\n  };\r\n\r\n  const { category, minPrice, maxPrice, order } = localFilter;\r\n  return (\r\n    <form onSubmit={passFilter} className=\"filters\">\r\n      <div className=\"filter-group\">\r\n        <label>\r\n          <p className=\"input-label\">Категория</p>\r\n          <select className=\"filter-input\" name=\"category\" onChange={handleChange} value={category}>\r\n            <option value=\"any\">Любая категория</option>\r\n            <option value=\"immovable\">Недвижимость</option>\r\n            <option value=\"cameras\">Фотоаппараты</option>\r\n            <option value=\"auto\">Автомобили</option>\r\n            <option value=\"laptops\">Ноутбуки</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"filter-group\">\r\n        <label>\r\n          <p className=\"input-label\">Цена, мин.</p>\r\n          <input\r\n            className=\"filter-input filter-input--min-price\"\r\n            type=\"number\"\r\n            name=\"minPrice\"\r\n            placeholder=\"От\"\r\n            onChange={handleChange}\r\n            onBlur={passFilter}\r\n            onKeyPress={handleKeyPress}\r\n            value={minPrice}\r\n            min=\"0\"\r\n          />\r\n        </label>\r\n        <label>\r\n          <p className=\"input-label\">Цена, макс.</p>\r\n          <input\r\n            className=\"filter-input filter-input--max-price\"\r\n            type=\"number\"\r\n            name=\"maxPrice\"\r\n            placeholder=\"До\"\r\n            onChange={handleChange}\r\n            onBlur={passFilter}\r\n            onKeyPress={handleKeyPress}\r\n            value={maxPrice}\r\n            min=\"0\"\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"filter-group filter__order\">\r\n        <label>\r\n          <p className=\"input-label\">Сортировка</p>\r\n          <select className=\"filter-input\" name=\"order\" onChange={handleChange} value={order}>\r\n            <option value=\"rating\">По популярности</option>\r\n            <option value=\"price\">По возрастанию цены</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\nimport 'App.css';\nimport Header from 'Components/Header/Header';\nimport ProductsDataProvider from 'Containers/ProductsDataProvider/ProductsDataProvider';\nimport Filters from 'Components/Filters/Filters';\n\nfunction App() {\n  const [filter, setFilter] = useState({\n    category: 'any',\n    minPrice: '',\n    maxPrice: '',\n    order: 'rating',\n  });\n\n  const [favoritesOnly, setFavoritesOnly] = useState(false);\n\n  return (\n    <>\n      <Header favoritesOnly={favoritesOnly} setFavoritesOnly={setFavoritesOnly} />\n      <main className=\"main-containers\">\n        <h1 className=\"visually-hidden\">Объявления Авито</h1>\n        <Filters filter={filter} setFilter={setFilter} />\n        <ProductsDataProvider filter={filter} favoritesOnly={favoritesOnly} />\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './variables.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}