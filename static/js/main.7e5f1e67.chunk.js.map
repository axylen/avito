{"version":3,"sources":["Components/Header/Header.jsx","Components/SellerInfo/SellerInfo.jsx","Components/Product/Product.jsx","Containers/ProductList/ProductList.jsx","Containers/ProductsDataProvider/ProductsDataProvider.jsx","Components/Filters/Filters.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","_ref","setFavoritesOnly","favoritesClasses","favoritesOnly","push","setShowFavorites","show","document","activeElement","blur","react_default","a","createElement","className","onClick","xmlns","href","width","height","join","ratingColors","1","2","3","4","5","SellerInfo","data","_data$rating","rating","_data$name","name","isCompany","borderColor","Math","round","style","title","concat","toFixed","Product","sellerData","seller","_useContext","useContext","favoritesContext","favorites","addToFavorites","removeFromFavorites","image","pictures","imagesCount","length","id","price","toLocaleString","currency","minimumFractionDigits","isInFavorites","includes","src","alt","loading","SellerInfo_SellerInfo","ProductList","products","map","product","key","Product_Product","React","createContext","ProductsDataProvider","filter","_useState","useState","_useState2","Object","slicedToArray","productList","setProductList","_useState3","_useState4","productListFavorites","setProductListFavorites","setFavorites","localStorage","setItem","JSON","stringify","useEffect","asyncToGenerator","regenerator_default","mark","_callee","_ref3","_ref4","productsRes","sellersRes","sellers","wrap","_context","prev","next","Promise","all","fetch","then","res","json","sent","forEach","sellerId","relationships","objectSpread","stop","loadFavorites","getItem","parse","updateFavorites","e","window","addEventListener","removeEventListener","category","minPrice","maxPrice","sort","b","order","undefined","Provider","value","toConsumableArray","productId","ProductList_ProductList","Filters","setFilter","localFilter","setLocalFilter","fixPriceValues","handleChange","_e$target","target","type","newFilter","defineProperty","oldVal","handleBlur","handleKeyPress","isNaN","preventDefault","onSubmit","onChange","placeholder","onBlur","onKeyPress","min","App","Fragment","Header_Header","Filters_Filters","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7e5f1e67.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default function Header({ setFavoritesOnly, favoritesOnly }) {\r\n  const favoritesClasses = ['header__heart-icon'];\r\n  if (favoritesOnly) favoritesClasses.push('header__heart-icon--active');\r\n\r\n  const setShowFavorites = show => {\r\n    document.activeElement.blur();\r\n    setFavoritesOnly(show);\r\n  };\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__container\">\r\n        <button className=\"header__avito-btn\" onClick={() => setShowFavorites(false)}>\r\n          <svg className=\"header__avito-icon\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <use href=\"icons.svg#icon-avito\" />\r\n          </svg>\r\n        </button>\r\n        <button className=\"header__favorites\" onClick={() => setShowFavorites(true)}>\r\n          <svg\r\n            width=\"20\"\r\n            height=\"20\"\r\n            className={favoritesClasses.join(' ')}\r\n            xmlns=\"http://www.w3.org/2000/svg\">\r\n            <use href=\"icons.svg#icon-heart\" />\r\n          </svg>\r\n          Избранное\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './SellerInfo.css';\r\n\r\nconst ratingColors = {\r\n  1: '#E74C3C',\r\n  2: '#EC8825',\r\n  3: '#F1C40F',\r\n  4: '#ADC630',\r\n  5: '#69CA53',\r\n};\r\n\r\nexport default function SellerInfo({ data }) {\r\n  const { rating = 0, name = '', isCompany } = data;\r\n  const borderColor = ratingColors[Math.round(rating)] || '#ccc';\r\n\r\n  return (\r\n    <div className=\"seller\">\r\n      <p className=\"seller__rating\" style={{ borderColor }} title={`Рейтинг продавца: ${rating}`}>\r\n        {rating.toFixed(1)}\r\n      </p>\r\n      <div className=\"seller-info\">\r\n        <p className=\"seller-info__company\">{isCompany ? 'Компания' : 'Частное лицо'}</p>\r\n        <p className=\"seller-info__name\">{name}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport './Product.css';\r\nimport SellerInfo from 'Components/SellerInfo/SellerInfo';\r\nimport { favoritesContext } from 'Containers/ProductsDataProvider/ProductsDataProvider';\r\n\r\nexport default function Product({ data }) {\r\n  const sellerData = data.seller;\r\n  const { favorites, addToFavorites, removeFromFavorites } = useContext(favoritesContext);\r\n\r\n  const image = data.pictures[0];\r\n  const imagesCount = data.pictures.length - 1;\r\n  const { id, title } = data;\r\n  const price = data.price\r\n    ? data.price.toLocaleString('ru', {\r\n        style: 'currency',\r\n        currency: 'RUB',\r\n        minimumFractionDigits: 0,\r\n      })\r\n    : null;\r\n\r\n  const isInFavorites = favorites.includes(id);\r\n\r\n  const handleClick = () => {\r\n    if (isInFavorites) {\r\n      return removeFromFavorites(id);\r\n    }\r\n    return addToFavorites(id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"product\">\r\n      <div className=\"product__image-group\">\r\n        <img src={image} alt={title} className=\"product__image\" loading=\"lazy\" />\r\n        <button className=\"product__favorites-btn\" onClick={handleClick}>\r\n          <svg\r\n            width=\"20\"\r\n            height=\"20\"\r\n            className={\r\n              isInFavorites\r\n                ? 'product__heart-icon product__heart-icon--active'\r\n                : 'product__heart-icon'\r\n            }\r\n            xmlns=\"http://www.w3.org/2000/svg\">\r\n            <use href=\"icons.svg#icon-heart\" />\r\n          </svg>\r\n        </button>\r\n        <div className=\"product__images-count\" title={`Дополнительных фото: ${imagesCount}`}>\r\n          {imagesCount === 0 ? null : `+${imagesCount}`}\r\n        </div>\r\n      </div>\r\n      <div className=\"product__info\">\r\n        <h2 className=\"product__title\">{title}</h2>\r\n        <p className=\"product__price\">{price || 'Цена не указана'}</p>\r\n        <SellerInfo data={sellerData} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './ProductList.css';\r\n\r\nimport Product from 'Components/Product/Product';\r\n\r\nexport default function ProductList({ products }) {\r\n  if (products.length === 0) return 'Список объявлений пуст';\r\n\r\n  return (\r\n    <ul className=\"product-list\">\r\n      {products.map(product => (\r\n        <li key={product.id}>\r\n          <Product data={product} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport ProductList from 'Containers/ProductList/ProductList';\r\n\r\nconst favoritesContext = React.createContext();\r\n\r\nexport default function ProductsDataProvider({ filter, favoritesOnly }) {\r\n  const [productList, setProductList] = useState([]);\r\n  const [productListFavorites, setProductListFavorites] = useState([]);\r\n\r\n  const setFavorites = favorites => {\r\n    setProductListFavorites(favorites);\r\n    localStorage.setItem('favorites', JSON.stringify(favorites));\r\n  };\r\n\r\n  const addToFavorites = id => {\r\n    if (productListFavorites.includes(id)) return;\r\n    setFavorites([...productListFavorites, id]);\r\n  };\r\n  const removeFromFavorites = id => {\r\n    setFavorites(productListFavorites.filter(productId => productId !== id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async function() {\r\n      const [productsRes, sellersRes] = await Promise.all([\r\n        fetch('//avito.dump.academy/products').then(res => res.json()),\r\n        fetch('//avito.dump.academy/sellers').then(res => res.json()),\r\n      ]);\r\n\r\n      const sellers = {};\r\n      sellersRes.data.forEach(seller => {\r\n        sellers[seller.id] = seller;\r\n      });\r\n\r\n      const products = productsRes.data.map(product => {\r\n        const sellerId = product.relationships.seller;\r\n        return { ...product, seller: sellers[sellerId] };\r\n      });\r\n\r\n      setProductList(products);\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const loadFavorites = () => {\r\n      const favorites = localStorage.getItem('favorites');\r\n      if (favorites) {\r\n        setProductListFavorites(JSON.parse(favorites));\r\n      }\r\n    };\r\n    loadFavorites();\r\n\r\n    const updateFavorites = e => {\r\n      if (e.key === 'favorites') {\r\n        loadFavorites();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('storage', updateFavorites);\r\n\r\n    return () => {\r\n      window.removeEventListener('storage', updateFavorites);\r\n    };\r\n  }, []);\r\n\r\n  let products = productList;\r\n\r\n  if (favoritesOnly) {\r\n    products = products.filter(product => productListFavorites.includes(product.id));\r\n  }\r\n\r\n  if (filter.category !== 'any') {\r\n    products = products.filter(product => product.category === filter.category);\r\n  }\r\n  if (filter.minPrice !== '') {\r\n    products = products.filter(product => product.price >= filter.minPrice);\r\n  }\r\n  if (filter.maxPrice !== '') {\r\n    products = products.filter(product => product.price <= filter.maxPrice);\r\n  }\r\n\r\n  products = products.sort((a, b) => {\r\n    if (filter.order === 'rating') return b.seller.rating - a.seller.rating;\r\n\r\n    if (a.price === undefined) return 1;\r\n    if (b.price === undefined) return -1;\r\n    return a.price - b.price;\r\n  });\r\n\r\n  return (\r\n    <favoritesContext.Provider\r\n      value={{ favorites: productListFavorites, addToFavorites, removeFromFavorites }}>\r\n      <ProductList products={products} />\r\n    </favoritesContext.Provider>\r\n  );\r\n}\r\n\r\nexport { favoritesContext };\r\n","import React, { useState } from 'react';\r\nimport './Filters.css';\r\n\r\nexport default function Filters({ filter, setFilter }) {\r\n  const [localFilter, setLocalFilter] = useState(filter);\r\n\r\n  const fixPriceValues = filter => {\r\n    if (filter.minPrice === '' || filter.maxPrice === '') {\r\n      return filter;\r\n    }\r\n\r\n    if (filter.minPrice > filter.maxPrice) {\r\n      filter = { ...filter, minPrice: filter.maxPrice, maxPrice: filter.minPrice };\r\n      setLocalFilter(filter);\r\n      return filter;\r\n    }\r\n\r\n    return filter;\r\n  };\r\n\r\n  const handleChange = e => {\r\n    let { name, value, type } = e.target;\r\n\r\n    if (type === 'number') {\r\n      value = +value || '';\r\n      if (value < 0) value = '';\r\n    }\r\n\r\n    const newFilter = { ...localFilter, [name]: value };\r\n\r\n    setLocalFilter(oldVal => ({ ...oldVal, [name]: value }));\r\n    if (type === 'select-one') {\r\n      setFilter(newFilter);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    setFilter(fixPriceValues(localFilter));\r\n  };\r\n\r\n  const handleBlur = e => {\r\n    setFilter(fixPriceValues(localFilter));\r\n  };\r\n\r\n  const handleKeyPress = e => {\r\n    const key = e.key;\r\n\r\n    if (key === 'Enter') e.target.blur();\r\n    else if (isNaN(key)) e.preventDefault();\r\n  };\r\n\r\n  const { category, minPrice, maxPrice, order } = localFilter;\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"filters\">\r\n      <div className=\"filter-group\">\r\n        <label>\r\n          <p className=\"input-label\">Категория</p>\r\n          <select className=\"filter-input\" name=\"category\" onChange={handleChange} value={category}>\r\n            <option value=\"any\">Любая категория</option>\r\n            <option value=\"immovable\">Недвижимость</option>\r\n            <option value=\"cameras\">Фотоаппараты</option>\r\n            <option value=\"auto\">Автомобили</option>\r\n            <option value=\"laptops\">Ноутбуки</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"filter-group\">\r\n        <label>\r\n          <p className=\"input-label\">Цена, мин.</p>\r\n          <input\r\n            className=\"filter-input filter-input--min-price\"\r\n            type=\"number\"\r\n            name=\"minPrice\"\r\n            placeholder=\"От\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            onKeyPress={handleKeyPress}\r\n            value={minPrice || ' '}\r\n            min=\"0\"\r\n          />\r\n        </label>\r\n        <label>\r\n          <p className=\"input-label\">Цена, макс.</p>\r\n          <input\r\n            className=\"filter-input filter-input--max-price\"\r\n            type=\"number\"\r\n            name=\"maxPrice\"\r\n            placeholder=\"До\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            onKeyPress={handleKeyPress}\r\n            value={maxPrice || ' '}\r\n            min=\"0\"\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"filter-group filter__order\">\r\n        <label>\r\n          <p className=\"input-label\">Сортировка</p>\r\n          <select className=\"filter-input\" name=\"order\" onChange={handleChange} value={order}>\r\n            <option value=\"rating\">По популярности</option>\r\n            <option value=\"price\">По возрастанию цены</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\nimport 'App.css';\nimport Header from 'Components/Header/Header';\nimport ProductsDataProvider from 'Containers/ProductsDataProvider/ProductsDataProvider';\nimport Filters from 'Components/Filters/Filters';\n\nfunction App() {\n  const [filter, setFilter] = useState({\n    category: 'any',\n    minPrice: '',\n    maxPrice: '',\n    order: 'rating',\n  });\n\n  const [favoritesOnly, setFavoritesOnly] = useState(false);\n\n  return (\n    <>\n      <Header favoritesOnly={favoritesOnly} setFavoritesOnly={setFavoritesOnly} />\n      <main className=\"main-containers\">\n        <h1 className=\"visually-hidden\">Объявления Авито</h1>\n        <Filters filter={filter} setFilter={setFilter} />\n        <ProductsDataProvider filter={filter} favoritesOnly={favoritesOnly} />\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './variables.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}